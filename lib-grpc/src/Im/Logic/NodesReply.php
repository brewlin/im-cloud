<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: logic.proto

namespace Im\Logic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>im.logic.NodesReply</code>
 */
class NodesReply extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string domain = 1;</code>
     */
    private $domain = '';
    /**
     * Generated from protobuf field <code>int32 tcpPort = 2;</code>
     */
    private $tcpPort = 0;
    /**
     * Generated from protobuf field <code>int32 wsPort = 3;</code>
     */
    private $wsPort = 0;
    /**
     * Generated from protobuf field <code>int32 wssPort = 4;</code>
     */
    private $wssPort = 0;
    /**
     * Generated from protobuf field <code>int32 heartbeat = 5;</code>
     */
    private $heartbeat = 0;
    /**
     * Generated from protobuf field <code>repeated string nodes = 6;</code>
     */
    private $nodes;
    /**
     * Generated from protobuf field <code>.im.logic.Backoff backoff = 7;</code>
     */
    private $backoff = null;
    /**
     * Generated from protobuf field <code>int32 heartbeatMax = 8;</code>
     */
    private $heartbeatMax = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $domain
     *     @type int $tcpPort
     *     @type int $wsPort
     *     @type int $wssPort
     *     @type int $heartbeat
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $nodes
     *     @type \Im\Logic\Backoff $backoff
     *     @type int $heartbeatMax
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Logic::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string domain = 1;</code>
     * @return string
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * Generated from protobuf field <code>string domain = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDomain($var)
    {
        GPBUtil::checkString($var, True);
        $this->domain = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 tcpPort = 2;</code>
     * @return int
     */
    public function getTcpPort()
    {
        return $this->tcpPort;
    }

    /**
     * Generated from protobuf field <code>int32 tcpPort = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTcpPort($var)
    {
        GPBUtil::checkInt32($var);
        $this->tcpPort = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 wsPort = 3;</code>
     * @return int
     */
    public function getWsPort()
    {
        return $this->wsPort;
    }

    /**
     * Generated from protobuf field <code>int32 wsPort = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setWsPort($var)
    {
        GPBUtil::checkInt32($var);
        $this->wsPort = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 wssPort = 4;</code>
     * @return int
     */
    public function getWssPort()
    {
        return $this->wssPort;
    }

    /**
     * Generated from protobuf field <code>int32 wssPort = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setWssPort($var)
    {
        GPBUtil::checkInt32($var);
        $this->wssPort = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 heartbeat = 5;</code>
     * @return int
     */
    public function getHeartbeat()
    {
        return $this->heartbeat;
    }

    /**
     * Generated from protobuf field <code>int32 heartbeat = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setHeartbeat($var)
    {
        GPBUtil::checkInt32($var);
        $this->heartbeat = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string nodes = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNodes()
    {
        return $this->nodes;
    }

    /**
     * Generated from protobuf field <code>repeated string nodes = 6;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNodes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->nodes = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.im.logic.Backoff backoff = 7;</code>
     * @return \Im\Logic\Backoff
     */
    public function getBackoff()
    {
        return $this->backoff;
    }

    /**
     * Generated from protobuf field <code>.im.logic.Backoff backoff = 7;</code>
     * @param \Im\Logic\Backoff $var
     * @return $this
     */
    public function setBackoff($var)
    {
        GPBUtil::checkMessage($var, \Im\Logic\Backoff::class);
        $this->backoff = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 heartbeatMax = 8;</code>
     * @return int
     */
    public function getHeartbeatMax()
    {
        return $this->heartbeatMax;
    }

    /**
     * Generated from protobuf field <code>int32 heartbeatMax = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setHeartbeatMax($var)
    {
        GPBUtil::checkInt32($var);
        $this->heartbeatMax = $var;

        return $this;
    }

}

